// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/slack/command": {
            "post": {
                "description": "Updates the rotation for a channel or creates a new rotation if it doesn't exist",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "slack"
                ],
                "summary": "Update or create a channel rotation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slack verification token",
                        "name": "token",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slack Team ID",
                        "name": "team_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slack Team Domain",
                        "name": "team_domain",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slack Enterprise ID",
                        "name": "enterprise_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slack Enterprise Name",
                        "name": "enterprise_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Channel ID where command was issued",
                        "name": "channel_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Channel name",
                        "name": "channel_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "User ID of the person who triggered the command",
                        "name": "user_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Username of the person who triggered the command",
                        "name": "user_name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slash command (e.g., /release-train)",
                        "name": "command",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Text following the command",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "URL to send delayed response to",
                        "name": "response_url",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Trigger ID for interactive components",
                        "name": "trigger_id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slack App ID",
                        "name": "api_app_id",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rotation updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Slack Release Train Bot API",
	Description:      "This is the API documentation for the Slack rotation bot that manages user rotations.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
